"use strict";(self.webpackChunkfreewili_docs=self.webpackChunkfreewili_docs||[]).push([[9477],{8073:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>d,contentTitle:()=>o,default:()=>g,frontMatter:()=>r,metadata:()=>l,toc:()=>c});var s=n(4848),t=n(8453),a=n(9980);const r={sidebar_position:3},o="Displaying Images",l={id:"gui-screen-buttons-and-lights/displaying-images",title:"Displaying Images",description:"FREE-WILi allows you to display images on the screen. FREE-WILi has some built in images but a more interesting user interface can be done with custom images.",source:"@site/docs/gui-screen-buttons-and-lights/displaying-images.md",sourceDirName:"gui-screen-buttons-and-lights",slug:"/gui-screen-buttons-and-lights/displaying-images",permalink:"/gui-screen-buttons-and-lights/displaying-images",draft:!1,unlisted:!1,editUrl:"https://github.com/freewili/FreeWili_WebDocs/blob/main/docs/gui-screen-buttons-and-lights/displaying-images.md",tags:[],version:"current",lastUpdatedAt:1722585602e3,sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Making sounds",permalink:"/gui-screen-buttons-and-lights/making-sounds"},next:{title:"Accelerometer",permalink:"/gui-screen-buttons-and-lights/accelerometer"}},d={},c=[{value:"Displaying Images from the ROM",id:"displaying-images-from-the-rom",level:2},{value:"Displaying Images from the API",id:"displaying-images-from-the-api",level:2},{value:"Structure of Image File",id:"structure-of-image-file",level:2},{value:"Binary Header",id:"binary-header",level:2},{value:"Pixel Data",id:"pixel-data",level:2}];function h(e){const i={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",header:"header",img:"img",p:"p",pre:"pre",strong:"strong",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(i.header,{children:(0,s.jsx)(i.h1,{id:"displaying-images",children:"Displaying Images"})}),"\n",(0,s.jsx)(i.p,{children:"FREE-WILi allows you to display images on the screen. FREE-WILi has some built in images but a more interesting user interface can be done with custom images."}),"\n",(0,s.jsx)(i.p,{children:'Custom images can be loaded into the FREE-WILi display processor file system. Then, using the API they can be displayed on command. The images should be stored in the "images" directory.'}),"\n",(0,s.jsx)(i.p,{children:"Custom images first must be converted to the FREE-WILi Image format. This is basically a bitmap that is compatible with the 565 color display used. The direct compatibility allows fast display of images without any runtime conversion."}),"\n",(0,s.jsxs)(i.p,{children:["A python script is written called ",(0,s.jsx)(i.code,{children:"fw_image.py"})," that can convert a jpg or png to a FWI file. A FWI file is the image file you will download to FREE-WILi. This is available from the FREE-WILi github ",(0,s.jsx)(i.a,{href:"https://github.com/freewili",children:"https://github.com/freewili"})]}),"\n",(0,s.jsx)(i.p,{children:(0,s.jsx)(i.em,{children:(0,s.jsx)(i.strong,{children:"Syntax of fw_image.py:"})})}),"\n",(0,s.jsx)(i.p,{children:(0,s.jsx)(i.code,{children:"python3 fw_image.py source_image.png output_image.fwi"})}),"\n",(0,s.jsx)(i.h2,{id:"displaying-images-from-the-rom",children:"Displaying Images from the ROM"}),"\n",(0,s.jsx)(i.p,{children:"The FREE-WILi ROM contains a number of images you can use for your own applications. The following file lists the ROM images available."}),"\n","\n",(0,s.jsx)(a.A,{title:"FwRomAssets.pdf",description:"pdf",link:"/downloads/FwRomAssets.pdf",imageUrl:"/img/png-download.png"}),"\n",(0,s.jsx)(i.h2,{id:"displaying-images-from-the-api",children:"Displaying Images from the API"}),"\n",(0,s.jsxs)(i.p,{children:["The GUIAPI has a function for displaying images from files or ROM. Here we display ",(0,s.jsx)(i.code,{children:"cookie.fwi"})," in the images directory."]}),"\n",(0,s.jsx)(i.p,{children:(0,s.jsx)(i.code,{children:'obGUIAPI.addControlPictureFromFile(iPanelNumber,PANEL_PICTURE_COOKIE,20,160,"cookie",1 );'})}),"\n",(0,s.jsx)("div",{class:"text--center",children:(0,s.jsx)("figure",{children:(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.img,{alt:"Cookie.fwi shown on FREE-WILi screen.",src:n(4284).A+"",title:"Cookie.fwi shown on FREE-WILi screen.",width:"481",height:"360"}),"\r\n",(0,s.jsx)("figcaption",{children:"Cookie.fwi shown on FREE-WILi screen."})]})})}),"\n",(0,s.jsx)(i.p,{children:"To Display from ROM you can use this API"}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-c",children:"void addControlPicture(int iPanelIndex, int iControlIndex, int iX, int iY,\r\n                   int iPictureId, int iVisible)\n"})}),"\n",(0,s.jsx)(i.h2,{id:"structure-of-image-file",children:"Structure of Image File"}),"\n",(0,s.jsxs)(i.p,{children:["The file consists of a binary header describing the file and the pixels. The pixels are stored in 16 bit 565 format. The 565 16 bit color format is a common format in embedded systems. There are a number of resources online that discuss this format. The best way to understand the format is to review the source code of ",(0,s.jsx)(i.code,{children:"fw_image.py"})]}),"\n",(0,s.jsx)(i.h2,{id:"binary-header",children:"Binary Header"}),"\n",(0,s.jsx)(i.p,{children:"The beginning of the file is below. Ints are 32 bit here and shorts are 16 bit."}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-c",children:'char szOut[8] = { "FW01IMG" };\r\nunsigned int iImageFlags;\r\nunsigned int iImageTotalPixelCount;\r\nunsigned short iImageWidth;\r\nunsigned short iImageHeight;\r\nunsigned short iImageTransparentColor;\r\nunsigned short iImageId;\n'})}),"\n",(0,s.jsx)(i.h2,{id:"pixel-data",children:"Pixel Data"}),"\n",(0,s.jsx)(i.p,{children:"The pixel data is described below. A 16 bit unsigned short contains the pixel with varying intensities for Red, Green, and Blue. The final value is byte swapped."}),"\n",(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.code,{children:"rgb = (int(R)<<11) | (int(G)<<5) | int(B)"})," ",(0,s.jsx)("br",{}),"\r\n",(0,s.jsx)(i.code,{children:"rgb = ((rgb << 8) & 0xFF00) | ((rgb >> 8) & 0xFF);"})]})]})}function g(e={}){const{wrapper:i}={...(0,t.R)(),...e.components};return i?(0,s.jsx)(i,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}},9980:(e,i,n)=>{n.d(i,{A:()=>l});n(6540);const s="card_t5fD",t="cardContent_yn8N",a="cardHeader_jh50",r="cardImage_zPy4";var o=n(4848);const l=e=>{let{title:i,description:n,link:l,imageUrl:d}=e;return(0,o.jsx)("a",{href:l,target:"_blank",rel:"noopener noreferrer",className:s,children:(0,o.jsxs)("div",{className:t,children:[(0,o.jsxs)("div",{className:a,children:[d&&(0,o.jsx)("img",{src:d,alt:i,className:r}),(0,o.jsx)("h3",{children:i})]}),(0,o.jsx)("p",{children:n})]})})}},4284:(e,i,n)=>{n.d(i,{A:()=>s});const s=n.p+"assets/images/cookie-fwi-1e9cab54c17fddbc8f4bce1da4eac72f.jpg"},8453:(e,i,n)=>{n.d(i,{R:()=>r,x:()=>o});var s=n(6540);const t={},a=s.createContext(t);function r(e){const i=s.useContext(a);return s.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function o(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),s.createElement(a.Provider,{value:i},e.children)}}}]);