"use strict";(self.webpackChunkfreewili_docs=self.webpackChunkfreewili_docs||[]).push([[5443],{4921:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>l,contentTitle:()=>r,default:()=>p,frontMatter:()=>o,metadata:()=>s,toc:()=>c});var n=i(4848),a=i(8453);const o={sidebar_position:7},r="Logic Analyzer",s={id:"io-app/logic-analyzer",title:"Logic Analyzer",description:"The default FPGA configuration implements a Logic Analyzer compatible with Sigrok Pulseview. This logic analyzer uses the FPGA front end and communicates with the PC using the FTDI High speed user interface. The Logic Analyzer operates transparently to the IO features of FREE-WILi so you can use it to test when you are interfacing to digital protocols.",source:"@site/docs/io-app/logic-analyzer.md",sourceDirName:"io-app",slug:"/io-app/logic-analyzer",permalink:"/io-app/logic-analyzer",draft:!1,unlisted:!1,editUrl:"https://github.com/freewili/FreeWili_WebDocs/blob/main/docs/io-app/logic-analyzer.md",tags:[],version:"current",sidebarPosition:7,frontMatter:{sidebar_position:7},sidebar:"tutorialSidebar",previous:{title:"File System Menu",permalink:"/io-app/file-system-menu"},next:{title:"Settings Menu",permalink:"/io-app/settings-menu/"}},l={},c=[];function h(e){const t={a:"a",h1:"h1",img:"img",p:"p",strong:"strong",...(0,a.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.h1,{id:"logic-analyzer",children:"Logic Analyzer"}),"\n",(0,n.jsxs)(t.p,{children:["The default ",(0,n.jsx)(t.a,{href:"/hardware-low-level-details/ice40-fpga/",children:"FPGA"})," configuration implements a Logic Analyzer compatible with ",(0,n.jsx)(t.a,{href:"https://sigrok.org/wiki/PulseView",children:"Sigrok Pulseview"}),". This logic analyzer uses the FPGA front end and communicates with the PC using the FTDI High speed user interface. The Logic Analyzer operates ",(0,n.jsx)(t.strong,{children:"transparently"})," to the IO features of FREE-WILi so you can use it to test when you are interfacing to digital protocols."]}),"\n",(0,n.jsxs)(t.p,{children:["The FPGA bit files for the logic analyzer are always being implemented and are open source. These are available at the FREE-WILi ",(0,n.jsx)(t.a,{href:"https://github.com/freewili/",children:"github"}),". You can change the default FPGA bit file in the ",(0,n.jsx)(t.a,{href:"/io-app/settings-menu/",children:"settings"})," of FREE-WILi."]}),"\n",(0,n.jsx)("div",{class:"text--center",children:(0,n.jsx)("figure",{children:(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.img,{alt:"logic-analyzer",src:i(8478).A+"",title:"logic-analyzer",width:"1383",height:"1220"}),"\r\n",(0,n.jsx)("figcaption",{children:"Analyze your digital protocols without attaching wires"})]})})})]})}function p(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(h,{...e})}):h(e)}},8478:(e,t,i)=>{i.d(t,{A:()=>n});const n=i.p+"assets/images/logic-analyzer-94388b567c3408ad8980e8fecda507dd.jpg"},8453:(e,t,i)=>{i.d(t,{R:()=>r,x:()=>s});var n=i(6540);const a={},o=n.createContext(a);function r(e){const t=n.useContext(o);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),n.createElement(o.Provider,{value:t},e.children)}}}]);