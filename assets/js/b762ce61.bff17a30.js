"use strict";(self.webpackChunkfreewili_docs=self.webpackChunkfreewili_docs||[]).push([[4177],{8556:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>s,metadata:()=>l,toc:()=>a});var n=i(4848),r=i(8453);const s={title:"Scripting with ZoomIO for FREE-WILi - Precision GPIO Control and Integration",description:"Explore ZoomIO scripting for FREE-WILi to achieve sub-nanosecond GPIO control with native ARM assembly. Learn about ZoomIO commands, integration with the IOApp, and how to write and execute scripts for precise digital waveform generation.",keywords:["FREE-WILi ZoomIO scripting","sub-nanosecond GPIO control","ZoomIO commands","ARM assembly for GPIO","FREE-WILi IOApp integration","ZoomIO examples","precision waveform generation"],sidebar_position:5,sidebar_label:"Scripting with ZoomIO"},o="Scripting with ZoomIO",l={id:"io-app/scripting-with-zoomio",title:"Scripting with ZoomIO for FREE-WILi - Precision GPIO Control and Integration",description:"Explore ZoomIO scripting for FREE-WILi to achieve sub-nanosecond GPIO control with native ARM assembly. Learn about ZoomIO commands, integration with the IOApp, and how to write and execute scripts for precise digital waveform generation.",source:"@site/docs/io-app/scripting-with-zoomio.md",sourceDirName:"io-app",slug:"/io-app/scripting-with-zoomio",permalink:"/io-app/scripting-with-zoomio",draft:!1,unlisted:!1,editUrl:"https://github.com/freewili/FreeWili_WebDocs/blob/main/docs/io-app/scripting-with-zoomio.md",tags:[],version:"current",lastUpdatedAt:1724134738e3,sidebarPosition:5,frontMatter:{title:"Scripting with ZoomIO for FREE-WILi - Precision GPIO Control and Integration",description:"Explore ZoomIO scripting for FREE-WILi to achieve sub-nanosecond GPIO control with native ARM assembly. Learn about ZoomIO commands, integration with the IOApp, and how to write and execute scripts for precise digital waveform generation.",keywords:["FREE-WILi ZoomIO scripting","sub-nanosecond GPIO control","ZoomIO commands","ARM assembly for GPIO","FREE-WILi IOApp integration","ZoomIO examples","precision waveform generation"],sidebar_position:5,sidebar_label:"Scripting with ZoomIO"},sidebar:"tutorialSidebar",previous:{title:"Scripting with WASM",permalink:"/io-app/scripting-with-wasm"},next:{title:"File System Menu",permalink:"/io-app/file-system-menu"}},c={},a=[];function d(e){const t={code:"code",h1:"h1",header:"header",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,r.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.header,{children:(0,n.jsx)(t.h1,{id:"scripting-with-zoomio",children:"Scripting with ZoomIO"})}),"\n",(0,n.jsx)(t.p,{children:"ZoomIO is a scripting language that allows sub nanosecond precision control of the GPIO. Its very high level but produces native ARM assembly in the correct way to ensure design time determinism."}),"\n",(0,n.jsx)(t.p,{children:"To achieve precise determinism, native code runs in the second CPU core of the rp2040 and takes advantage of single cycle IO and the zero latency CPUs dedicated 4K RAM."}),"\n",(0,n.jsx)(t.p,{children:"The zoomio is used to implement the logic analyzer view on the GUI screen."}),"\n",(0,n.jsx)(t.p,{children:"The IOApp integrates the ZoomIO compiler. You can simply write the source file and download to the scripts directory. The FREE-WILi will determine which engine to target based on the file extension. The ZoomIO source files have the extension zio."}),"\n",(0,n.jsx)(t.p,{children:"The code below illustrates a simple ZoomIO program. The pin is generating a waveform on pin 27 with nanosecond control of the waveform."}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-cpp",children:"setio(27, 1);\r\ndelay(2000);\r\nsetio(27, 0);\r\ndelay(1000);\r\nsetio(27, 1);\r\ndelay(2000);\r\nsetio(27, 0);\n"})}),"\n",(0,n.jsx)(t.p,{children:"The ZoomIO commands are executed in a sequence. The following commands are currently supported."}),"\n",(0,n.jsxs)(t.table,{children:[(0,n.jsx)(t.thead,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.th,{style:{textAlign:"center"},children:(0,n.jsx)(t.strong,{children:"Command"})}),(0,n.jsx)(t.th,{style:{textAlign:"center"},children:(0,n.jsx)(t.strong,{children:"Arguments"})}),(0,n.jsx)(t.th,{style:{textAlign:"center"},children:(0,n.jsx)(t.strong,{children:"Notes"})})]})}),(0,n.jsxs)(t.tbody,{children:[(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"center"},children:"setio"}),(0,n.jsx)(t.td,{style:{textAlign:"center"},children:"(arg 1) Io pin (arg2) state"}),(0,n.jsx)(t.td,{style:{textAlign:"center"}})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"center"},children:"delay"}),(0,n.jsx)(t.td,{style:{textAlign:"center"},children:"(arg1) delay in ns"}),(0,n.jsx)(t.td,{style:{textAlign:"center"},children:"32 bit value. Delay precision is based of the CPU clock (default is 125Mhz or 8ns)"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"center"},children:"loop"}),(0,n.jsx)(t.td,{style:{textAlign:"center"},children:"(arg) number of loops till loopend"}),(0,n.jsx)(t.td,{style:{textAlign:"center"}})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"center"},children:"endloop"}),(0,n.jsx)(t.td,{style:{textAlign:"center"},children:"ends loop"}),(0,n.jsx)(t.td,{style:{textAlign:"center"}})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"center"},children:"waitfor"}),(0,n.jsxs)(t.td,{style:{textAlign:"center"},children:["(arg1) io pin ",(0,n.jsx)("br",{})," (arg2) transistion"]}),(0,n.jsx)(t.td,{style:{textAlign:"center"},children:"waits for a pin to be high, low, rising, or failing"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"center"},children:"begin"}),(0,n.jsxs)(t.td,{style:{textAlign:"center"},children:["(arg1) buffersizein bytes ",(0,n.jsx)("br",{})," (arg2) bufferbitsize"]}),(0,n.jsx)(t.td,{style:{textAlign:"center"},children:"initials a capture buffer up to 2Kbytes, word size can be 8,16, or 32 bits"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"center"},children:"readpins"}),(0,n.jsx)(t.td,{style:{textAlign:"center"},children:"(arg1) startpin"}),(0,n.jsx)(t.td,{style:{textAlign:"center"},children:"reads bufferbitsize in to the buffer. it the top bit is the start pin followed by consecutively numbered bits"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"center"},children:"trigger"}),(0,n.jsxs)(t.td,{style:{textAlign:"center"},children:["(arg1) io pin ",(0,n.jsx)("br",{})," (arg2) transition"]}),(0,n.jsx)(t.td,{style:{textAlign:"center"},children:"triggers on a pin to be high, low, rising, or failing"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"center"},children:"fifoloop"}),(0,n.jsx)(t.td,{style:{textAlign:"center"},children:"(arg1) loops to make after trigger"}),(0,n.jsx)(t.td,{style:{textAlign:"center"},children:"once triggered still collected samples"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"center"},children:"measure"}),(0,n.jsx)(t.td,{style:{textAlign:"center"},children:"(arg1) generic tag"}),(0,n.jsx)(t.td,{style:{textAlign:"center"},children:"copies tag and 24 bit timer to buffer (buffer must be 32 bit)"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"center"},children:"chrono"}),(0,n.jsxs)(t.td,{style:{textAlign:"center"},children:["(arg1) start=1,stop=2,reset=3, ",(0,n.jsx)("br",{})," (arg2)  measurement index"]}),(0,n.jsx)(t.td,{style:{textAlign:"center"},children:"Records timing statistics for up to 16 values with min, max"})]})]})]})]})}function h(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}},8453:(e,t,i)=>{i.d(t,{R:()=>o,x:()=>l});var n=i(6540);const r={},s=n.createContext(r);function o(e){const t=n.useContext(s);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),n.createElement(s.Provider,{value:t},e.children)}}}]);