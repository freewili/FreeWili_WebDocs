"use strict";(self.webpackChunkfreewili_docs=self.webpackChunkfreewili_docs||[]).push([[4195],{9357:(i,e,t)=>{t.r(e),t.d(e,{assets:()=>d,contentTitle:()=>s,default:()=>u,frontMatter:()=>o,metadata:()=>a,toc:()=>c});var n=t(4848),r=t(8453);const o={title:"CC1101 Radio Settings - Configuration Guide and Reference FREE-WILi",description:"View the CC1101 radio settings for FREE-WILi, based on the ELECHOUSE Arduino driver. Includes a visual configuration guide and reference link.",keywords:["CC1101","radio settings","FREE-WILi","ELECHOUSE Arduino driver","radio configuration","CC1101 settings","radio configuration guide","packet radio"],sidebar_position:2,sidebar_label:"CC1101 Radio Settings"},s="CC1101 Radio Settings",a={id:"radios/black-radio-cc1101/cc1101-radio-settings",title:"CC1101 Radio Settings - Configuration Guide and Reference FREE-WILi",description:"View the CC1101 radio settings for FREE-WILi, based on the ELECHOUSE Arduino driver. Includes a visual configuration guide and reference link.",source:"@site/docs/radios/black-radio-cc1101/cc1101-radio-settings.md",sourceDirName:"radios/black-radio-cc1101",slug:"/radios/black-radio-cc1101/cc1101-radio-settings",permalink:"/radios/black-radio-cc1101/cc1101-radio-settings",draft:!1,unlisted:!1,editUrl:"https://github.com/freewili/FreeWili_WebDocs/blob/main/docs/radios/black-radio-cc1101/cc1101-radio-settings.md",tags:[],version:"current",lastUpdatedAt:1724134738e3,sidebarPosition:2,frontMatter:{title:"CC1101 Radio Settings - Configuration Guide and Reference FREE-WILi",description:"View the CC1101 radio settings for FREE-WILi, based on the ELECHOUSE Arduino driver. Includes a visual configuration guide and reference link.",keywords:["CC1101","radio settings","FREE-WILi","ELECHOUSE Arduino driver","radio configuration","CC1101 settings","radio configuration guide","packet radio"],sidebar_position:2,sidebar_label:"CC1101 Radio Settings"},sidebar:"tutorialSidebar",previous:{title:"Black Radio (CC1101)",permalink:"/radios/black-radio-cc1101/"},next:{title:"GUI : Screen, Buttons, and Lights",permalink:"/gui-screen-buttons-and-lights/"}},d={},c=[];function l(i){const e={a:"a",h1:"h1",header:"header",img:"img",p:"p",...(0,r.R)(),...i.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(e.header,{children:(0,n.jsx)(e.h1,{id:"cc1101-radio-settings",children:"CC1101 Radio Settings"})}),"\n",(0,n.jsx)(e.p,{children:"The radio settings are shown below."}),"\n",(0,n.jsxs)(e.p,{children:["The settings closely follow the ELECHOUSE CC1101 Ardunio driver from here: ",(0,n.jsx)(e.a,{href:"https://github.com/simonmonk/CC1101_arduino/blob/master/ELECHOUSE_CC1101.h",children:"https://github.com/simonmonk/CC1101_arduino/blob/master/ELECHOUSE_CC1101.h"})]}),"\n",(0,n.jsx)("div",{class:"text--center",children:(0,n.jsx)("figure",{children:(0,n.jsxs)(e.p,{children:[(0,n.jsx)(e.img,{alt:"Radio Settings",src:t(8767).A+"",title:"Radio Settings",width:"679",height:"850"}),"\r\n",(0,n.jsx)("figcaption",{children:"Radio Settings."})]})})})]})}function u(i={}){const{wrapper:e}={...(0,r.R)(),...i.components};return e?(0,n.jsx)(e,{...i,children:(0,n.jsx)(l,{...i})}):l(i)}},8767:(i,e,t)=>{t.d(e,{A:()=>n});const n=t.p+"assets/images/config-radio-8c5d98856a7184af5a089c3b013dd4f1.png"},8453:(i,e,t)=>{t.d(e,{R:()=>s,x:()=>a});var n=t(6540);const r={},o=n.createContext(r);function s(i){const e=n.useContext(o);return n.useMemo((function(){return"function"==typeof i?i(e):{...e,...i}}),[e,i])}function a(i){let e;return e=i.disableParentContext?"function"==typeof i.components?i.components(r):i.components||r:s(i.components),n.createElement(o.Provider,{value:e},i.children)}}}]);