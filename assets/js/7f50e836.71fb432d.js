"use strict";(self.webpackChunkfreewili_docs=self.webpackChunkfreewili_docs||[]).push([[183],{6796:(e,i,t)=>{t.r(i),t.d(i,{assets:()=>l,contentTitle:()=>o,default:()=>h,frontMatter:()=>s,metadata:()=>a,toc:()=>d});var r=t(4848),n=t(8453);const s={sidebar_position:9},o="FREE-WILi Firmware Update",a={id:"freewili-firmware-update",title:"FREE-WILi Firmware Update",description:"FREE-WILi has two RP2040 processors.  One is the DISPLAY processor and the other is the MAIN processor.",source:"@site/docs/freewili-firmware-update.md",sourceDirName:".",slug:"/freewili-firmware-update",permalink:"/freewili-firmware-update",draft:!1,unlisted:!1,editUrl:"https://github.com/freewili/FreeWili_WebDocs/blob/main/docs/freewili-firmware-update.md",tags:[],version:"current",lastUpdatedAt:1723146871e3,sidebarPosition:9,frontMatter:{sidebar_position:9},sidebar:"tutorialSidebar",previous:{title:"FPGA Default Application",permalink:"/hardware-low-level-details/ice40-fpga/fpga-default-application"},next:{title:"Helpful Links",permalink:"/helpful-links/"}},l={},d=[{value:"Updating the Main Processor",id:"updating-the-main-processor",level:2},{value:"Updating the Display Processor",id:"updating-the-display-processor",level:2}];function c(e){const i={a:"a",em:"em",h1:"h1",h2:"h2",header:"header",li:"li",ol:"ol",p:"p",strong:"strong",...(0,n.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(i.header,{children:(0,r.jsx)(i.h1,{id:"free-wili-firmware-update",children:"FREE-WILi Firmware Update"})}),"\n",(0,r.jsxs)(i.p,{children:["FREE-WILi has two RP2040 processors.  One is the ",(0,r.jsx)(i.strong,{children:"DISPLAY"})," processor and the other is the ",(0,r.jsx)(i.strong,{children:"MAIN"})," processor."]}),"\n",(0,r.jsx)(i.p,{children:"\u26a0\ufe0f It is important to update each processor with the correct type of firmware file."}),"\n",(0,r.jsxs)(i.p,{children:["\u26a0\ufe0f The below instructions assume that the FREE-WILi is ",(0,r.jsx)(i.a,{href:"../../the-basics/#turning-free-wili-on-or-off",children:"TURNED OFF"}),"."]}),"\n",(0,r.jsx)(i.h2,{id:"updating-the-main-processor",children:"Updating the Main Processor"}),"\n",(0,r.jsxs)(i.p,{children:["Pressing and holding the RED button ",(0,r.jsx)(i.em,{children:"as USB is connected"})," activates the RP2040 ROM bootloader.  This will enable the default way to program the RP2040 via USB."]}),"\n",(0,r.jsxs)(i.ol,{children:["\n",(0,r.jsxs)(i.li,{children:["Receive or create a FREE-WILi ",(0,r.jsx)(i.strong,{children:"MAIN"})," UF2 file."]}),"\n",(0,r.jsx)(i.li,{children:"Hold the RED button and plug in USB."}),"\n",(0,r.jsx)(i.li,{children:"The host computer will show FREE-WILi as a flash drive."}),"\n",(0,r.jsxs)(i.li,{children:["Copy the ",(0,r.jsx)(i.strong,{children:"MAIN"})," UF2 file to the flash drive.  Allow firmware to update."]}),"\n",(0,r.jsx)(i.li,{children:"After the update, FREE-WILi will disconnect from USB and reconnect as a USB COM Port (normal operation)."}),"\n"]}),"\n",(0,r.jsx)(i.h2,{id:"updating-the-display-processor",children:"Updating the Display Processor"}),"\n",(0,r.jsxs)(i.p,{children:["Pressing and holding the BLUE button ",(0,r.jsx)(i.em,{children:"as USB is connected"})," activates the display processor bootloader."]}),"\n",(0,r.jsxs)(i.ol,{children:["\n",(0,r.jsxs)(i.li,{children:["Receive or create a FREE-WILi ",(0,r.jsx)(i.strong,{children:"DISPLAY"})," UF2 file."]}),"\n",(0,r.jsx)(i.li,{children:"Hold the BLUE button and plug in USB."}),"\n",(0,r.jsx)(i.li,{children:"The host computer will show FREE-WILi as a flash drive."}),"\n",(0,r.jsxs)(i.li,{children:["Copy the ",(0,r.jsx)(i.strong,{children:"DISPLAY"})," UF2 file to the flash drive.  Allow firmware to update."]}),"\n",(0,r.jsx)(i.li,{children:"After the update, FREE-WILi will disconnect from USB and reconnect as a USB COM Port (normal operation)."}),"\n"]})]})}function h(e={}){const{wrapper:i}={...(0,n.R)(),...e.components};return i?(0,r.jsx)(i,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},8453:(e,i,t)=>{t.d(i,{R:()=>o,x:()=>a});var r=t(6540);const n={},s=r.createContext(n);function o(e){const i=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function a(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:o(e.components),r.createElement(s.Provider,{value:i},e.children)}}}]);